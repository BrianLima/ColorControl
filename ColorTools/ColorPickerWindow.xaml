<Window x:Name="ColorEditor" x:Class="ColorTools.ColorPickerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ColorTools"
        Title="Select Color" Height="300" Width="450" ResizeMode="NoResize" Background="#FF222222">

    <!-- ******* RESOURCES ******* -->
    <Window.Resources>

        <!-- *** BRUSHES *** -->
        <!-- SPECTRUM GRAD -->
        <LinearGradientBrush x:Key="SpectrumVerticalGradient" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Red"/>
            <GradientStop Color="Red" Offset="1"/>
            <GradientStop Color="#FEFFFF00" Offset="0.1667"/>
            <GradientStop Color="#FE00FF00" Offset="0.3333"/>
            <GradientStop Color="#FE00FFFF" Offset="0.5"/>
            <GradientStop Color="#FE0000FF" Offset="0.6667"/>
            <GradientStop Color="#FEFF00FF" Offset="0.8333"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SpectrumHorizontalGradient" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="Red"/>
            <GradientStop Color="Red" Offset="1"/>
            <GradientStop Color="#FEFFFF00" Offset="0.1667"/>
            <GradientStop Color="#FE00FF00" Offset="0.3333"/>
            <GradientStop Color="#FE00FFFF" Offset="0.5"/>
            <GradientStop Color="#FE0000FF" Offset="0.6667"/>
            <GradientStop Color="#FEFF00FF" Offset="0.8333"/>
        </LinearGradientBrush>

        <!-- Color Slider Thumb - The Thumb is the draggable part of a Slider -->
        <Style x:Key="ColorSliderThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Ellipse x:Name="Ellipse" Fill="{TemplateBinding Foreground}" Stroke="Black" StrokeThickness="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" Value="#FE4F4F4F" TargetName="Ellipse"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Spectrum Slider Thumb - The Thumb is the draggable part of a Slider -->
        <Style x:Key="SpectrumSliderThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Rectangle x:Name="Ellipse" Fill="{TemplateBinding Foreground}" Stroke="Black" StrokeThickness="1"
                                       Width="10" Height="{TemplateBinding Width}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" Value="#FE4F4F4F" TargetName="Ellipse"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Spectrum Slider -->
        <Style x:Key="SliderHueComponent" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- TickBar shows the ticks for Slider -->
                            <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{x:Null}" Grid.ColumnSpan="3" Margin="0,0,0,10" Grid.RowSpan="2"/>

                            <Border Grid.Row="1" Margin="0" x:Name="Border" Height="25" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Grid.ColumnSpan="3"/>

                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource SpectrumSliderThumb}" Foreground="{TemplateBinding Foreground}"/>
                                </Track.Thumb>
                            </Track>

                            <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" Grid.ColumnSpan="3" Margin="0,0,0,-4"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#FF373737" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="#FF373737" TargetName="Border"/>
                            </Trigger>

                            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track rotates itself based on orientation so need to force it back -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Color Slider -->
        <Style x:Key="SliderColorComponent" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- TickBar shows the ticks for Slider -->
                            <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" Grid.ColumnSpan="3" Margin="0,0,0,10" Grid.RowSpan="2"/>

                            <Border Grid.Row="1" Margin="0,5" x:Name="Border" Height="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Grid.ColumnSpan="3"/>

                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ColorSliderThumb}" Foreground="{TemplateBinding Foreground}"/>
                                </Track.Thumb>
                            </Track>

                            <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" Grid.ColumnSpan="3" Margin="0,0,0,-4"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            </Trigger>

                            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track rotates itself based on orientation so need to force it back -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Alpha Slider -->
        <Style x:Key="SliderAlphaComponent" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- TickBar shows the ticks for Slider -->
                            <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" Grid.ColumnSpan="3" Margin="0,0,0,10" Grid.RowSpan="2"/>

                            <!-- Underlying pattern for alpha component slider -->
                            <Border Grid.Row="1" Margin="0,5" Height="4" CornerRadius="2">
                                <Border.Background>
                                    <DrawingBrush Stretch="None" TileMode="Tile" Viewport="12,12,20,20" ViewportUnits="Absolute">

                                        <!-- a drawing of 4 checkerboard tiles -->
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>

                                                <!-- checkerboard background -->
                                                <GeometryDrawing Brush="White">
                                                    <GeometryDrawing.Geometry>
                                                        <RectangleGeometry Rect="0,0,20,20" />
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>

                                                <!-- two checkerboard foreground tiles -->
                                                <GeometryDrawing Brush="LightGray">
                                                    <GeometryDrawing.Geometry>
                                                        <GeometryGroup>
                                                            <RectangleGeometry Rect="0,0,10,10" />
                                                            <RectangleGeometry Rect="10,10,10,10" />
                                                        </GeometryGroup>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>

                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Border.Background>
                            </Border>
                            <Border Grid.Row="1" Margin="0,5" x:Name="Border" Height="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Grid.ColumnSpan="3"/>

                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ColorSliderThumb}" Foreground="{TemplateBinding Foreground}"/>
                                </Track.Thumb>
                            </Track>

                            <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" Grid.ColumnSpan="3" Margin="0,0,0,-4"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            </Trigger>

                            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track rotates itself based on orientation so need to force it back -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5" Padding="2" CornerRadius="0">

                                <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" Background="{TemplateBinding Background}"/>

                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF7C7C7C" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>



    <!-- ******* Color Controls ******* -->
    <DockPanel LastChildFill="False">
        <Grid x:Name="RootGrid" DockPanel.Dock="Top" Height="175">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Height, ElementName=RootGrid, Mode=OneWay}"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="323*"/>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="SaturationGradient" Stroke="Black" Margin="10,10,2,2">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        <GradientStop Color="#FF00D6FF" Offset="1"/>
                        <GradientStop Color="White"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <Rectangle x:Name="ValueGradient" Stroke="Black" Margin="10,10,2,2">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="1"/>
                        <GradientStop Color="#00000000"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <Slider x:Name="sliderSpectrum" Style="{DynamicResource SliderHueComponent}" BorderBrush="Black" 
                    Maximum="253" SmallChange="1" Foreground="#FF0071FF" Margin="0,10,0,2" 
                    Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Center" 
                    Background="{DynamicResource SpectrumHorizontalGradient}" Value="150" RenderTransformOrigin="0.5,0.5" Width="25" BorderThickness="1">
                <Slider.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="-1" ScaleX="1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Slider.RenderTransform>
            </Slider>

            <DockPanel x:Name="RGBAdock" Grid.Column="2" Margin="5,10,10,2">
                <DockPanel x:Name="dockRed" Height="25" LastChildFill="true" Margin="0,0,0,5" DockPanel.Dock="Top">
                    <Label x:Name="labelR" DockPanel.Dock="Left" Content="R" ScrollViewer.VerticalScrollBarVisibility="Disabled" Foreground="#FFC7C7C7" Width="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Padding="2" FontFamily="Cambria Math"/>
                    <TextBox x:Name="txtRvalue" DockPanel.Dock="Right" TextWrapping="Wrap" Text="255" Background="#FF2C2C2C" Foreground="#FFD6D6D6" HorizontalContentAlignment="Center" FontFamily="Cambria Math" VerticalContentAlignment="Bottom" BorderBrush="{x:Null}" Margin="0" VerticalAlignment="Center" Padding="0,1,0,0" FontSize="16" Height="25" Width="37"/>
                    <Slider x:Name="sliderRed" Style="{StaticResource SliderColorComponent}" BorderBrush="{x:Null}" Value="25" Maximum="255" SmallChange="1" Foreground="#FF570000" VerticalAlignment="Center" Margin="0,0,5,0">
                        <Slider.Background>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="Red" Offset="1"/>
                            </LinearGradientBrush>
                        </Slider.Background>
                    </Slider>
                </DockPanel>
                <DockPanel x:Name="dockGreen" Height="25" LastChildFill="true" Margin="0,0,0,5" DockPanel.Dock="Top">
                    <Label x:Name="labelG" DockPanel.Dock="Left" Content="G" ScrollViewer.VerticalScrollBarVisibility="Disabled" Foreground="#FFC7C7C7" Width="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Padding="2" FontFamily="Cambria Math"/>
                    <TextBox x:Name="txtGvalue" DockPanel.Dock="Right" TextWrapping="Wrap" Text="255" Background="#FF2C2C2C" Foreground="#FFD6D6D6" HorizontalContentAlignment="Center" FontFamily="Cambria Math" VerticalContentAlignment="Bottom" BorderBrush="{x:Null}" Margin="0" VerticalAlignment="Center" Padding="0,1,0,0" FontSize="16" Height="25" Width="37"/>
                    <Slider x:Name="sliderGreen" Style="{StaticResource SliderColorComponent}" BorderBrush="{x:Null}" Value="25" Maximum="255" SmallChange="1" Foreground="#FF003D00" VerticalAlignment="Center" Margin="0,0,5,0">
                        <Slider.Background>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="Lime" Offset="1"/>
                            </LinearGradientBrush>
                        </Slider.Background>
                    </Slider>
                </DockPanel>
                <DockPanel x:Name="dockBlue" Height="25" LastChildFill="true" Margin="0,0,0,5" DockPanel.Dock="Top">
                    <Label x:Name="labelB" DockPanel.Dock="Left" Content="B" ScrollViewer.VerticalScrollBarVisibility="Disabled" Foreground="#FFC7C7C7" Width="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Padding="2" FontFamily="Cambria Math"/>
                    <TextBox x:Name="txtBvalue" DockPanel.Dock="Right" TextWrapping="Wrap" Text="255" Background="#FF2C2C2C" Foreground="#FFD6D6D6" HorizontalContentAlignment="Center" FontFamily="Cambria Math" VerticalContentAlignment="Bottom" BorderBrush="{x:Null}" Margin="0" VerticalAlignment="Center" Padding="0,1,0,0" FontSize="16" Height="25" Width="37"/>
                    <Slider x:Name="sliderBlue" Style="{StaticResource SliderColorComponent}" BorderBrush="{x:Null}" Value="25" Maximum="255" SmallChange="1" Foreground="#FF000056" VerticalAlignment="Center" Margin="0,0,5,0">
                        <Slider.Background>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="Blue" Offset="1"/>
                            </LinearGradientBrush>
                        </Slider.Background>
                    </Slider>
                </DockPanel>
                <DockPanel x:Name="dockAlpha" Height="25" LastChildFill="true" Margin="0,0,0,5" DockPanel.Dock="Top">
                    <Label x:Name="labelA" DockPanel.Dock="Left" Content="A" ScrollViewer.VerticalScrollBarVisibility="Disabled" Foreground="#FFC7C7C7" Width="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Padding="2" FontFamily="Cambria Math"/>
                    <TextBox x:Name="txtAvalue" DockPanel.Dock="Right" TextWrapping="Wrap" Text="255" Background="#FF2C2C2C" Foreground="#FFD6D6D6" HorizontalContentAlignment="Center" FontFamily="Cambria Math" VerticalContentAlignment="Bottom" BorderBrush="{x:Null}" Margin="0" VerticalAlignment="Center" Padding="0,1,0,0" FontSize="16" Height="25" Width="37"/>
                    <Slider x:Name="sliderAlpha" Style="{DynamicResource SliderAlphaComponent}" BorderBrush="{x:Null}" Value="25" Maximum="255" SmallChange="1" Foreground="#FF979797" VerticalAlignment="Center" Margin="0,0,5,0">
                        <Slider.Background>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#FF699A69" Offset="1"/>
                            </LinearGradientBrush>
                        </Slider.Background>
                    </Slider>
                </DockPanel>
                <DockPanel x:Name="dockSelectedColor" DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                    <TextBox x:Name="textBox" TextWrapping="Wrap" Text="#FFA0BB77"
                             DockPanel.Dock="Right" VerticalAlignment="Bottom" Background="#FF2C2C2C" Foreground="#FFD6D6D6" FontSize="16" FontFamily="CambriaMath" BorderBrush="{x:Null}" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Width="91" Height="27" Padding="0,1,0,0"/>
                    <Rectangle x:Name="rectSelectedColor" Height="27" Fill="#FF3E6682" Width="66" VerticalAlignment="Bottom"
                           DockPanel.Dock="Right" HorizontalAlignment="Right"/>
                    <CheckBox x:Name="checkBox" Content="Active" Foreground="#FFD6D6D6" IsChecked="True" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,0,5,0"/>
                </DockPanel>

            </DockPanel>
        </Grid>
    </DockPanel>
</Window>
